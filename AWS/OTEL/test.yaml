apiVersion: v1
kind: Namespace
metadata:
  name: test-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-sample-app
  namespace: test-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs-sample
  template:
    metadata:
      labels:
        app: nodejs-sample
      annotations:
        instrumentation.opentelemetry.io/inject-nodejs: "opentelemetry/nodejs-instrumentation"
    spec:
      containers:
      - name: app
        image: node:18-alpine
        # --- LÍNEA AÑADIDA ---
        # Establecemos el directorio de trabajo a una ruta con permisos de escritura.
        workingDir: /home/node
        command: ["/bin/sh", "-c"]
        args:
          - |
            npm install express && \
            echo "const express = require('express'); \
                  const app = express(); \
                  const port = 3000; \
                  app.get('/', (req, res) => { \
                    console.log('Petición recibida en el servidor de prueba!'); \
                    res.send('Hola desde la imagen oficial de Node.js!'); \
                  }); \
                  app.listen(port, () => { \
                    console.log(\`Servidor escuchando en el puerto \${port}\`); \
                  });" > server.js && \
            node server.js
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-sample-service
  namespace: test-app
spec:
  selector:
    app: nodejs-sample
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP
